// Copyright 2019 Thibault NORMAND
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package spotigraph.guild.v1;

option csharp_namespace = "Spotigraph.Guild.V1";
option go_package = "guildv1";
option java_multiple_files = true;
option java_outer_classname = "GuildApiProto";
option java_package = "org.zenithar.spotigraph.guild.v1";
option objc_class_prefix = "SGX";
option php_namespace = "Spotigraph\\Guild\\V1";

import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import "google/protobuf/wrappers.proto";
import "spotigraph/guild/v1/guild.proto";
import "spotigraph/system/v1/system.proto";

// -----------------------------------------------------------------------------

// GuildAPI manage guild objects.
service GuildAPI {
  // Create a guild.
  rpc Create(CreateRequest) returns (CreateResponse);
  // Get a guild by id.
  rpc Get(GetRequest) returns (GetResponse);
  // Update guild attributes.
  rpc Update(UpdateRequest) returns (UpdateResponse);
  // Delete a guild by id.
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  // Search for guilds.
  rpc Search(SearchRequest) returns (SearchResponse);
  // Join a guild.
  rpc Join(JoinRequest) returns (JoinResponse);
  // Leave a guild.
  rpc Leave(LeaveRequest) returns (LeaveResponse);
}

// -----------------------------------------------------------------------------

message CreateRequest {
  string label = 1 [
    (validate.rules).string = {
      pattern: "^[A-Za-z]+([ 0-9A-Za-z]+)*$"
      min_bytes: 2
      max_bytes: 50
    }
  ];
}

message GetRequest {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message UpdateRequest {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
  google.protobuf.StringValue label = 2;
}

message DeleteRequest {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message SearchRequest {
  uint32 page = 1;
  uint32 per_page = 2;
  repeated string sorts = 3;
  google.protobuf.StringValue cursor = 4;
  google.protobuf.StringValue guild_id = 5 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
  google.protobuf.StringValue label = 6;
}

message CreateResponse {
  .spotigraph.system.v1.Error error = 1;
  Guild entity = 2;
}

message GetResponse {
  .spotigraph.system.v1.Error error = 1;
  Guild entity = 2;
}

message UpdateResponse {
  .spotigraph.system.v1.Error error = 1;
  Guild entity = 2;
}

message DeleteResponse {
  .spotigraph.system.v1.Error error = 1;
}

message SearchResponse {
  .spotigraph.system.v1.Error error = 1;
  uint32 total = 2;
  uint32 per_page = 3;
  uint32 count = 4;
  uint32 current_page = 5;
  google.protobuf.StringValue next_cursor = 6;
  repeated Guild members = 7;
}

message JoinRequest {
  string person_id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
  string guild_id = 2 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message JoinResponse {
  .spotigraph.system.v1.Error error = 1;
}

message LeaveRequest {
  string person_id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
  string guild_id = 2 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message LeaveResponse {
  .spotigraph.system.v1.Error error = 1;
}
